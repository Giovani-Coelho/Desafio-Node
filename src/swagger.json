{
  "openapi": "3.0.0",
  "info": {
    "title": "RentalX Documentation",
    "description": "this is an API Rent",
    "version": "1.0.0",
    "contact": {
      "email": "giovanicoelho2004@hotmail.com"
    }
  },
  "paths": {
    "/users": {
      "post": {
        "tags": [
          "User"
        ],
        "summary": "Create a User",
        "description": "Create a new User",
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "type": "object",
                "properties": {
                  "name": {
                    "type": "string"
                  },
                  "email": {
                    "type": "string"
                  }
                },
                "example": {
                  "name": "Fulano",
                  "email": "fulano@blabla.com"
                }
              }
            }
          }
        },
        "responses": {
          "201": {
            "description": "Created",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "id": {
                      "type": "string"
                    },
                    "admin": {
                      "type": "boolean"
                    },
                    "created_at": {
                      "type": "string"
                    },
                    "updated_at": {
                      "type": "string"
                    },
                    "name": {
                      "type": "string"
                    },
                    "email": {
                      "type": "string"
                    }
                  },
                  "example": {
                    "id": "974e3d3d-5afc-4ef5-bb61-e87600128b43",
                    "admin": false,
                    "created_at": "2022-05-16T16:53:23.148Z",
                    "updated_at": "2022-05-16T16:53:23.148Z",
                    "name": "Fulano",
                    "email": "fulano@blabla.com"
                  }
                }
              }
            }
          },
          "500": {
            "description": "Email already exists",
            "content": {
              "application/json": {
                "schema": {
                  "example": {
                    "error": "Email already exists"
                  }
                }
              }
            }
          }
        }
      },
      "get": {
        "tags": [
          "User"
        ],
        "summary": "Search user by id",
        "description": "Search user br id",
        "parameters": [
          {
            "in": "path",
            "name": "user_id",
            "description": "user id: uuid",
            "required": true,
            "example": "ea057146-f68c-4124-b8b8-4279189acb81"
          }
        ],
        "responses": {
          "200": {
            "description": "found",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "id": {
                      "type": "string"
                    },
                    "admin": {
                      "type": "boolean"
                    },
                    "created_at": {
                      "type": "string"
                    },
                    "updated_at": {
                      "type": "string"
                    },
                    "name": {
                      "type": "string"
                    },
                    "email": {
                      "type": "string"
                    }
                  }
                }
              }
            }
          },
          "404": {
            "description": "Not Foud",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "error": {
                      "type": "string"
                    }
                  },
                  "example": {
                    "error": "Not Found!"
                  }
                }
              }
            }
          }
        }
      }
    },
    "/users/{user_id}": {
      "get": {
        "tags": [
          "User"
        ],
        "summary": "Get user info",
        "description": "Get user identified in parameter",
        "parameters": [
          {
            "in": "path",
            "name": "user_id",
            "description": "user id",
            "required": true,
            "example": "ea057146-f68c-4124-b8b8-4279189acb81"
          }
        ],
        "responses": {
          "200": {
            "description": "Ok",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "id": {
                      "type": "string"
                    },
                    "created_at": {
                      "type": "string"
                    },
                    "updated_at": {
                      "type": "string"
                    },
                    "admin": {
                      "type": "boolean"
                    },
                    "name": {
                      "type": "string"
                    },
                    "email": {
                      "type": "string"
                    }
                  }
                }
              }
            }
          },
          "404": {
            "description": "User not found",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "error": {
                      "type": "string"
                    }
                  }
                }
              }
            }
          }
        }
      }
    },
    "/users/{user_id}/admin": {
      "patch": {
        "tags": [
          "User"
        ],
        "summary": "Make user admin",
        "description": "Update isAdmin to true",
        "parameters": [
          {
            "name": "user_id",
            "in": "path",
            "description": "user id",
            "required": true,
            "schema": {
              "type": "string"
            },
            "example": "ea057146-f68c-4124-b8b8-4279189acb81"
          }
        ],
        "responses": {
          "201": {
            "description": "Ok",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "id": {
                      "type": "string"
                    },
                    "created_at": {
                      "type": "string"
                    },
                    "updated_at": {
                      "type": "string"
                    },
                    "admin": {
                      "type": "boolean"
                    },
                    "name": {
                      "type": "string"
                    },
                    "email": {
                      "type": "string"
                    }
                  }
                }
              }
            }
          },
          "400": {
            "description": "Bad request",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "error": {
                      "type": "string"
                    }
                  }
                }
              }
            }
          },
          "404": {
            "description": "User not found",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "error": {
                      "type": "string"
                    }
                  }
                }
              }
            }
          }
        }
      }
    }
  }
}